<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 命叔瞎扯</title><link>https://oldrev.github.io/en/posts/</link><description>Recent content in Posts on 命叔瞎扯</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>李维（Li Wei）</copyright><lastBuildDate>Thu, 19 Sep 2024 12:00:00 +0800</lastBuildDate><atom:link href="https://oldrev.github.io/en/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Compile Rust with cross-compilation and run the unit tests using QEMU</title><link>https://oldrev.github.io/en/post/2024/09/rust-cross-qemu-test/</link><pubDate>Thu, 19 Sep 2024 12:00:00 +0800</pubDate><guid>https://oldrev.github.io/en/post/2024/09/rust-cross-qemu-test/</guid><description>TL;DR This post introduces a method to run unit tests for cross-compiled Rust programs on Linux using the qemu-user-static tool.
Why This Need? Recently, while working on embedded Linux development with Rust, I needed to run unit tests on the target platform after cross-compiling the program to ensure quality. The challenge was that &amp;ldquo;qemu-user-static&amp;rdquo; can only translate and execute individual executable files, while Rust&amp;rsquo;s unit tests are typically run using cargo test.</description></item></channel></rss>