<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>命叔瞎扯</title><link>https://oldrev.github.io/</link><description>Recent content on 命叔瞎扯</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 14 Sep 2024 04:42:39 +0800</lastBuildDate><atom:link href="https://oldrev.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 GCC 语句表达式模仿异常，简化错误处理</title><link>https://oldrev.github.io/2024/09/gcc-stateexpr/</link><pubDate>Sat, 14 Sep 2024 04:42:39 +0800</pubDate><guid>https://oldrev.github.io/2024/09/gcc-stateexpr/</guid><description>嵌入式开发里，90% 情况下用的是 GCC，这里介绍一个 GCC 的 C 语言语法扩展，叫“语句表达式”（Statement Expression）。语句表达式，允许在表达式中包含多个语句，并返回最后一个表达式语句的值，比如：
#include &amp;lt;stdio.h&amp;gt; int main() { int a = 5, b = 10; int result = ({ printf(&amp;#34;Calculating the sum of %d and %d\n&amp;#34;, a, b); a + b; }); printf(&amp;#34;The result is %d\n&amp;#34;, result); return 0; } 在这个例子中，({ ... }) 是一个语句表达式。它首先会打印一条调试信息，然后计算 a + b 并将结果返回给 result。
有了这个工具，可以很容易实现一个 TRY 宏：
#define TRY(expr, msg) ({ \ int result = (expr); \ if (result != 0) { \ fprintf(stderr, &amp;#34;Error: %s\n&amp;#34;, msg); \ return result; \ } \ }) 这个宏里，我们判断 expr 是否等于 0，如果成功则继续执行，否则打印 msg 并提前返回，以下是完整可以跑的示例代码：</description></item><item><title>Hello World</title><link>https://oldrev.github.io/2024/09/hello-world/</link><pubDate>Sat, 14 Sep 2024 00:44:25 +0800</pubDate><guid>https://oldrev.github.io/2024/09/hello-world/</guid><description>整个测试下</description></item><item><title>关于我</title><link>https://oldrev.github.io/pages/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://oldrev.github.io/pages/about/</guid><description>TODO</description></item></channel></rss>