<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 命叔瞎扯</title><link>https://oldrev.github.io/posts/</link><description>Recent content in Posts on 命叔瞎扯</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright>李维（Li Wei）</copyright><lastBuildDate>Thu, 19 Sep 2024 12:00:00 +0800</lastBuildDate><atom:link href="https://oldrev.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>用 QEMU 执行 Rust 交叉编译的单元测试</title><link>https://oldrev.github.io/post/2024/09/rust-cross-qemu-test/</link><pubDate>Thu, 19 Sep 2024 12:00:00 +0800</pubDate><guid>https://oldrev.github.io/post/2024/09/rust-cross-qemu-test/</guid><description>TL;DR 本文介绍一种在 Linux 下通过 qemu-user-static 工具对交叉编译的 Rust 程序执行单元测试的方法。 为何有此需求？ 最近用 Rust 做嵌入式 Linux 开发的时候，交叉编译完程序以后，为了保证</description></item><item><title>使用 GCC 语句表达式模仿异常，简化错误处理</title><link>https://oldrev.github.io/post/2024/09/gcc-stateexpr/</link><pubDate>Sat, 14 Sep 2024 04:42:39 +0800</pubDate><guid>https://oldrev.github.io/post/2024/09/gcc-stateexpr/</guid><description>嵌入式开发里，90% 情况下用的是 GCC，这里介绍一个 GCC 的 C 语言语法扩展，叫“语句表达式”（Statement Expression）。语句表达</description></item><item><title>Hello World</title><link>https://oldrev.github.io/post/2024/09/hello-world/</link><pubDate>Sat, 14 Sep 2024 00:44:25 +0800</pubDate><guid>https://oldrev.github.io/post/2024/09/hello-world/</guid><description>整个测试下</description></item></channel></rss>